{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuvraj\\\\Desktop\\\\ReactApp\\\\my-app\\\\src\\\\components\\\\Pages.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Pagination from \"@mui/material/Pagination\";\nimport { usePagination } from \"./../hooks/pagination\";\nimport { Grid, Card, CardActions, CardContent, Button, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pages = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [totalPages, startPageIndex, endPageIndex, currentPageIndex,\n  //eslint-disable-line\n  displayPage] = usePagination(5, data.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), (() => {\n      const displayPosts = [];\n      for (let i = startPageIndex; i <= endPageIndex; i++) {\n        displayPosts.push( /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            minWidth: 275\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                fontSize: 14\n              },\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: [data[i].title, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              component: \"div\",\n              children: [\"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                mb: 1.5\n              },\n              color: \"text.secondary\",\n              children: \"adjective\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [data[i].body, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), '\"a benevolent smile\"']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              children: \"Learn More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this));\n      }\n      return displayPosts;\n    })(), /*#__PURE__*/_jsxDEV(Pagination, {\n      color: \"primary\",\n      count: totalPages,\n      onChange: (event, value) => displayPage(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Pages, \"IGM0rwkDla0ywRLJI1DOLdagvgM=\", false, function () {\n  return [usePagination];\n});\n_c = Pages;\nexport default Pages;\nvar _c;\n$RefreshReg$(_c, \"Pages\");","map":{"version":3,"names":["React","Pagination","usePagination","Grid","Card","CardActions","CardContent","Button","Typography","Pages","data","totalPages","startPageIndex","endPageIndex","currentPageIndex","displayPage","length","marginLeft","displayPosts","i","push","minWidth","fontSize","title","bull","mb","body","event","value"],"sources":["C:/Users/Yuvraj/Desktop/ReactApp/my-app/src/components/Pages.js"],"sourcesContent":["import React from \"react\";\r\nimport Pagination from \"@mui/material/Pagination\";\r\nimport { usePagination } from \"./../hooks/pagination\";\r\nimport { Grid , Card , CardActions , CardContent , Button , Typography } from \"@mui/material\";\r\n\r\nconst Pages = ({ data }) => {\r\n  const [\r\n    totalPages,\r\n    startPageIndex,\r\n    endPageIndex,\r\n    currentPageIndex, //eslint-disable-line\r\n    displayPage,\r\n  ] = usePagination(5, data.length);\r\n  return (\r\n    <div style={{ marginLeft: \"20px\" }}>\r\n      <h1>User Posts</h1>\r\n      {(() => {\r\n        const displayPosts = [];\r\n        for (let i = startPageIndex; i <= endPageIndex; i++) {\r\n          displayPosts.push(\r\n            <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n              <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\r\n              {data[i].title}{\" \"}\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"div\">\r\n                be{bull}nev{bull}o{bull}lent\r\n              </Typography>\r\n              <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                adjective\r\n              </Typography>\r\n              <Typography variant=\"body2\">\r\n              {data[i].body}\r\n                <br />\r\n                {'\"a benevolent smile\"'}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\">Learn More</Button>\r\n            </CardActions>\r\n          </Card>\r\n          );\r\n        }\r\n        return displayPosts;\r\n      })()}\r\n      <Pagination\r\n        color=\"primary\"\r\n        count={totalPages}\r\n        onChange={(event, value) => displayPage(value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pages;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,IAAI,EAAGC,IAAI,EAAGC,WAAW,EAAGC,WAAW,EAAGC,MAAM,EAAGC,UAAU,QAAQ,eAAe;AAAC;AAE9F,MAAMC,KAAK,GAAG,QAAc;EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC;EACrB,MAAM,CACJC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZC,gBAAgB;EAAE;EAClBC,WAAW,CACZ,GAAGb,aAAa,CAAC,CAAC,EAAEQ,IAAI,CAACM,MAAM,CAAC;EACjC,oBACE;IAAK,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAA,wBACjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAClB,CAAC,MAAM;MACN,MAAMC,YAAY,GAAG,EAAE;MACvB,KAAK,IAAIC,CAAC,GAAGP,cAAc,EAAEO,CAAC,IAAIN,YAAY,EAAEM,CAAC,EAAE,EAAE;QACnDD,YAAY,CAACE,IAAI,eACf,QAAC,IAAI;UAAC,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAI,CAAE;UAAA,wBAC5B,QAAC,WAAW;YAAA,wBACV,QAAC,UAAU;cAAC,EAAE,EAAE;gBAAEC,QAAQ,EAAE;cAAG,CAAE;cAAC,KAAK,EAAC,gBAAgB;cAAC,YAAY;cAAA,WACpEZ,IAAI,CAACS,CAAC,CAAC,CAACI,KAAK,EAAE,GAAG;YAAA;cAAA;cAAA;cAAA;YAAA,QACN,eACb,QAAC,UAAU;cAAC,OAAO,EAAC,IAAI;cAAC,SAAS,EAAC,KAAK;cAAA,iBACnCC,IAAI,SAAKA,IAAI,OAAGA,IAAI;YAAA;cAAA;cAAA;cAAA;YAAA,QACZ,eACb,QAAC,UAAU;cAAC,EAAE,EAAE;gBAAEC,EAAE,EAAE;cAAI,CAAE;cAAC,KAAK,EAAC,gBAAgB;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEtC,eACb,QAAC,UAAU;cAAC,OAAO,EAAC,OAAO;cAAA,WAC1Bf,IAAI,CAACS,CAAC,CAAC,CAACO,IAAI,eACX;gBAAA;gBAAA;gBAAA;cAAA,QAAM,EACL,sBAAsB;YAAA;cAAA;cAAA;cAAA;YAAA,QACZ;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACd,QAAC,WAAW;YAAA,uBACV,QAAC,MAAM;cAAC,IAAI,EAAC,OAAO;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAoB;YAAA;YAAA;YAAA;UAAA,QAC5B;QAAA;UAAA;UAAA;UAAA;QAAA,QACT,CACN;MACH;MACA,OAAOR,YAAY;IACrB,CAAC,GAAG,eACJ,QAAC,UAAU;MACT,KAAK,EAAC,SAAS;MACf,KAAK,EAAEP,UAAW;MAClB,QAAQ,EAAE,CAACgB,KAAK,EAAEC,KAAK,KAAKb,WAAW,CAACa,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/C;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA/CInB,KAAK;EAAA,QAOLP,aAAa;AAAA;AAAA,KAPbO,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}